<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATQAAACkCAMAAAAuTiJaAAAABGdBTUEAALGPC/xhBQAAAeNQTFRFYevR
        W4Hi2uv9////HiQ+ZI/t+s7d/7fSoJvr+eiY3e7/3/D/+Z6/4PH////9Yu/UXIPnAAAtGiA7ZPPY/7vX
        /+6bAAArFh050ODy3fD/YfHSoJvpop3woKa4AAAvGxQ29fr+HBo5iJSmp7PEjpmrydjqfIiaGAYxjZy4
        8vP17O3usrXGDBY1GQ40T3TTWGaSSl+UQ2a7UM60u8nbQ1eQk4awcmKRwc/hV9vEU8G1SZyfV8++iITQ
        y8zR7fb/SpWdTbCrJjlMrK22l5uk2tvixcrSu73LSGitp6myQZOMGRswN3N0M0R2J0pWdoKhV3baOlqE
        OYJ/S7efYnKWNmd5PlqoQ5yNQWKyPVabT1VrNlKJNFl6Pk6cSFuyOVKDVGaNW2ypc3WopI6qw6W63rzL
        Ont7o7fPhomkq42byrp34c+EsKJtZGNIPLGgdYBjuKNwaot0mIlWmYRrpoR8pnKBsHKQy32fjG9s4Y6w
        LTIrb2eDXI6alGiNhHSGelt81LG9aGGEs5mlTkmDYWp7XV+Ze3+lbXB8lXqcV11xJUBRXnCgnJqNc3G4
        U3bGjYVyWYPVaWNoc3Bz15iuHy1isoKXLT5mAAASa09fyY6gnHiRhoiJAAAdRkxwi36Gi6CobJ2dYVVt
        LCAtFgAAHnJJREFUeF7tnY1fE1e6x0nAq844yYi8JEAU8gYJEIhhNyAvFUgC2hbWooLu1re24Mu1e+21
        rtfWXXel6nZFdqm71bba+6fe5znzzOTMSyYzyST287n7/XyUTEgmOT+ec37Pc86ZpMX37pEzYwnBryHk
        VpYysky/bB7y6m+OB1scQc94h8gfR0VOM1BNCkXGM7KvubrJH58hSapDT3l3yBM5idQqI4qxsWwzRZNX
        L350hCSpDj3pXSFn10IiKaUDZYNoaxJy5uykc83esWjyuYi+a3KAbBOrzZFN3jgfdDicMehpzcAkADhA
        3tw1y4j+6LlmqLb62+M9JIcz6HmNR85MrOtHdzmb9FcKMwVByl9ueB9FB3ATZgA9s+HI5+JSPrJyJav1
        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
        /wFSvsER3qjghAAAAABJRU5ErkJggg==
</value>
  </data>
</root>